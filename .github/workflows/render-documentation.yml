name: Render D2 Files to SVG and Publish Documentation

on:
  push:
    branches:
      - "main"
    paths:
      - 'docs/**'
    
jobs:
  render-diagrams:
    runs-on: ubuntu-latest
    permissions:
        contents: write
        packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Render .d2 files to SVG
        run: |
            for file in "**/docs/d2"/* 
            do
                # Extract filename without extension
                filename=$(basename "$file" .d2)
                echo $filename
                # Check if the file exists and run D2Lang to render the .d2 file to .svg
                if [[ -f "$file" ]]; then
                docker run --rm -v ${GITHUB_WORKSPACE}:/workspace --user $(id -u):$(id -g) ghcr.io/snekussaurier/d2lang-docker:latest d2 "/workspace/docs/d2/$filename.d2" "/workspace/docs/img/database/$filename.svg"
                fi
            done

      - name: Commit files to repository
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add docs/img/database/*.svg
            if git diff --cached --quiet; then
              echo "No changes to commit."
            else
              git commit -m "generated svg"
              git push
            fi

  deploy-mkdocs:
    runs-on: ubuntu-latest
    needs: render-diagrams
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material 
      - run: mkdocs gh-deploy --force
